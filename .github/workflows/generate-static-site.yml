# .github/workflows/generate-static-site.yml
name: Update Bing & Deploy to page

# 触发方式：
# - 手动触发（GitHub Actions 界面点击）
# - 每天 01:00 UTC（北京时间 09:00）
on:
  workflow_dispatch:                  # 允许手动运行
  schedule:
    - cron: "0 1 * * *"               # 每天 01:00 UTC

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 必需：允许写入分支（Settings → Actions → Read and write permissions）

    steps:
      # 1. 检出 main 分支代码
      - name: 🛠️ Checkout main branch
        uses: actions/checkout@v4

      # 2. 设置 Node.js 环境（v20）
      - name: 🟩 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      # 3. 运行 bing.js 获取最新 Bing 壁纸并生成 images.json
      - name: 🖼️ Generate Bing images.json
        run: node ./assets/js/bing.js

      # 4. 准备静态资源目录（只包含要部署的文件）
      - name: 📁 Prepare static directory
        run: |
          # 清理旧的 static 目录
          rm -rf static
          mkdir -p static/{assets/css,assets/fonts,assets/img,assets/js,assets/json}

          # 复制指定文件（不包含 bing.js、其他图片等）
          cp index.html static/
          cp 404.html static/ || true  # 404.html 可选
          cp favicon.ico static/
          cp apple-touch-icon.png static/

          cp assets/css/*.css static/assets/css/
          cp assets/fonts/* static/assets/fonts/
          cp assets/img/logo.png static/assets/img/
          cp assets/js/main.js static/assets/js/
          cp assets/js/fireworks.js static/assets/js/
          cp assets/json/images.json static/assets/json/
          cp assets/readme.md static/

          # 防止 GitHub Pages 启用 Jekyll 处理
          touch static/.nojekyll

          # 输出最终结构，便于调试
          echo "📄 Final static structure:"
          find static -type f | sort

      # 5. 配置 Git 提交者信息
      - name: 🧑‍💻 Configure git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      # 6. 部署到 page 分支
      - name: 🚀 Update page branch with new content
        run: |
          cd static

          # 初始化仓库（仅第一次需要，但安全起见每次都初始化）
          git init
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'

          # 添加远程仓库（确保能拉取）
          git remote add origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"

          # 拉取 page 分支（如果存在）
          git fetch origin page --depth=1 || true

          # 切换到 page 分支（不存在则创建）
          git checkout page || git checkout -b page

          # 添加并提交所有文件
          git add .
          git commit -m "[skip ci] 🖼️ Auto-update Bing images and deploy $(date +'%%Y-%%m-%%d %%H:%%M:%%S')" --allow-empty

          # 推送到 page 分支
          git push --force origin page